// Considere a seguinte definição para números naturais:
//
// Z:     O número zero
// (S x): O sucessor de um número x
//
// Ex.: O número 3 seria (S (S (S Z)))
//
// Com essa definição em mente, faça os seguintes exercícios:

// PS.: Lembre-se de novo que, se sua função tiver casos específicos,
// você precisa escrever uma versão da função para cada um dos casos:
//
// (Func Z)     -> Irá rodar apenas para Zero
// (Func (S n)) -> Irá rodar para qualquer número que não seja Zero
//              -> Chamando a função desse jeito, você pode usar 'n' como variável
// (Func x)     -> Irá rodar para qualquer número

// Retorna o antecessor do número
// (Pred x)
(Pred Z) = Z
(Pred (S n)) = n

// Retorna o dobro do número
// (Dobro x)
(Dobro Z) = Z
(Dobro (S n)) = (S (S (Dobro n)))

// Retorna metade (arredondado pra baixo) do número
// (Metade x)
(Metade Z) = Z
(Metade (S Z)) = Z
(Metade (S (S n))) = (S (Metade n))

// Retorna a adição de dois números
// (Add x y)
(Add Z y) = y
(Add (S x) y) = (Add x (S y))

// Retorna a subtração de dois números (0 se seria negativo)
// (Sub x y)
(Sub Z y) = Z
(Sub x Z) = x
(Sub (S x) (S y)) = (Sub x y)

// Retorna a multiplicação de dois números
// (Mul x y)
(Mul Z y) = Z
(Mul (S x) y) = (Add y (Mul x y))

// Retorna o fatorial de um número
// (Fat x)
(Fat Z) = (S Z)
(Fat (S x)) = (Mul (S x) (Fat x))

// SPECIAL BOSS: Retorna a divisão entre dois números, arredondada pra baixo
// PS.: Retorna 0 em caso de divisão por 0
// (Div x y)
(DivCeil Z y) = Z
(DivCeil x Z) = Z
(DivCeil x y) = (S (DivCeil (Sub x y) y))

// If expression. expr ? a : b
(If True a b) = a
(If False a b) = b

(DivFloor Z y) = Z
(DivFloor x Z) = Z
(DivFloor x y) = (If (Menor x y) Z (S (DivFloor (Sub x y) y)))

(Mod Z y) = Z
(Mod x Z) = x
(Mod x y) = (If (Menor x y) x (Mod (Sub x y) y))

(DivFloor2 x Z) = Z
(DivFloor2 x y) = (DivFloor2Aux (Sub x (Mod x y)) y)
  (DivFloor2Aux Z y) = Z
  (DivFloor2Aux x y) = (S (DivFloor2Aux (Sub x y) y))

// Para os exercícios a seguir, considere também a definição de Booleanos do arquivo anterior

// Retorna se dois números são iguais
// (Equal x y)
(Equal Z Z) = True
(Equal x Z) = False
(Equal Z y) = False
(Equal (S x) (S y)) = (Equal x y)

// Retorna se o primeiro arg é maior que o segundo
// (Maior x y)
(Maior Z Z) = False
(Maior Z y) = False
(Maior x Z) = True
(Maior (S x) (S y)) = (Maior x y)

// Retorna se o primeiro arg é menor que o segundo
// (Menor x y)
(Menor Z Z) = False
(Menor Z y) = True
(Menor x Z) = False
(Menor (S x) (S y)) = (Menor x y)

(Main) = (DivFloor2 (Fat (S (S (S (S Z))))) (S (S (S (S Z)))))
