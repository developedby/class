// Basic Exercises involving Pairs

type Pair <A: Type, B: Type> {
  new(fst: A, snd: B)
}

// Example:
// Swaps the elements of a pair
swap<A: Type, B: Type>(pair: Pair<A,B>): Pair<B,A>
  case pair {
    new: Pair.new<B, A>(pair.snd, pair.fst)
  }

// Returns the first element of a pair
first<A: Type, B: Type>(pair: Pair<A,B>): A
  open pair
  pair.fst

// Returns the second element of a pair
second<A: Type, B: Type>(pair: Pair<A,B>): B
  open pair
  pair.snd

// Applies a function to both elements of a Pair
map<A: Type, B: Type>(fn: A -> B, pair: Pair<A,A>): Pair<B,B>
  open pair
  Pair.new<B, B>(fn(pair.fst), fn(pair.snd))


ex_05: _
  IO {
    // {2, 1}
    IO.print(Pair.show!!(Nat.show, Nat.show, swap!!({1, 2})))
    // 1
    IO.print(Nat.show(first!!({1, 2})))
    // 2
    IO.print(Nat.show(second!!({1, 2})))
    // {2, 4}
    IO.print(Pair.show!!(Nat.show, Nat.show,
      map!!(Nat.mul(2), {1, 2})))
  }